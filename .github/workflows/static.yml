<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>لوحة إدارة الروابط</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
<style>
:root {
  --primary: #d4af37;
  --secondary: #8b0000;
  --dark: #111;
  --dark-light: #1c1c1c;
  --darker: #222;
  --text: #fff;
  --text-light: #bbb;
  --success: #28a745;
  --warning: #ffc107;
  --danger: #dc3545;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(135deg, var(--dark) 0%, #2c2c2c 100%);
  color: var(--text);
  direction: rtl;
  text-align: center;
  min-height: 100vh;
  line-height: 1.6;
}

.container {
  max-width: 1200px;
  margin: 20px auto;
  background: var(--dark-light);
  padding: 25px;
  border-radius: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  border: 1px solid #333;
}

h1, h2, h3 {
  color: var(--primary);
  margin-bottom: 20px;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

h1 { font-size: 2.2rem; }
h2 { font-size: 1.8rem; }
h3 { font-size: 1.4rem; }

input, select, button, textarea {
  width: 100%;
  padding: 12px 15px;
  margin: 10px 0;
  border: 2px solid #444;
  border-radius: 10px;
  font-size: 16px;
  transition: all 0.3s ease;
  font-family: inherit;
}

input, select, textarea {
  background: var(--darker);
  color: var(--text);
  border: 2px solid #444;
}

input:focus, select:focus, textarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(212, 175, 55, 0.3);
}

button {
  background: var(--secondary);
  color: var(--text);
  cursor: pointer;
  border: none;
  font-weight: bold;
  letter-spacing: 0.5px;
  position: relative;
  overflow: hidden;
}

button:hover {
  background: #a00000;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

button:active {
  transform: translateY(0);
}

button:disabled {
  background: #666;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

button i {
  margin-left: 8px;
}

button.logout {
  background: var(--danger);
  margin-top: 20px;
}

button.logout:hover {
  background: #c82333;
}

.hidden {
  display: none !important;
}

.fade-in {
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* كروت الروابط */
.links-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 20px;
  margin: 20px 0;
}

.link-card {
  border: 2px solid var(--primary);
  border-radius: 15px;
  padding: 20px;
  background: var(--darker);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.link-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--primary);
}

.link-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 15px 30px rgba(212, 175, 55, 0.2);
}

.link-card img {
  width: 100%;
  height: 120px;
  object-fit: contain;
  margin-bottom: 15px;
  border-radius: 8px;
  background: var(--dark-light);
  padding: 10px;
}

.link-card h3 {
  margin: 10px 0;
  font-size: 1.3rem;
}

.link-card a {
  display: inline-block;
  background: var(--primary);
  color: var(--dark);
  padding: 8px 15px;
  border-radius: 6px;
  text-decoration: none;
  font-weight: bold;
  margin: 10px 0;
  transition: all 0.3s ease;
}

.link-card a:hover {
  background: #e6c44c;
  transform: scale(1.05);
}

.link-actions {
  display: flex;
  gap: 8px;
  margin-top: 10px;
}

.link-actions button {
  flex: 1;
  padding: 8px;
  font-size: 13px;
}

.edit-link {
  background: var(--primary);
  color: var(--dark);
}

.edit-link:hover {
  background: #e6c44c;
}

.delete-link {
  background: var(--danger);
}

.delete-link:hover {
  background: #e74c3c;
}

/* إدارة المستخدمين */
.user-list {
  margin: 20px 0;
}

.user-item {
  border: 2px solid var(--primary);
  border-radius: 12px;
  margin: 15px 0;
  padding: 15px;
  background: var(--darker);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  transition: all 0.3s ease;
}

.user-item:hover {
  transform: translateX(-5px);
  box-shadow: 0 8px 20px rgba(212, 175, 55, 0.2);
}

.user-info {
  display: flex;
  align-items: center;
  gap: 15px;
  flex: 1;
  text-align: right;
}

.user-info img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid var(--primary);
}

.user-details {
  flex: 1;
}

.user-details strong {
  font-size: 1.1rem;
  display: block;
  margin-bottom: 5px;
}

.user-role {
  display: inline-block;
  padding: 3px 8px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: bold;
  margin: 2px;
}

.role-user { background: #6c757d; color: white; }
.role-staff { background: #17a2b8; color: white; }
.role-manager { background: #007bff; color: white; }
.role-superadmin { background: var(--primary); color: var(--dark); }

.status {
  font-size: 13px;
  color: var(--text-light);
  margin-top: 5px;
}

.user-actions {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
}

.user-actions button {
  margin: 2px;
  font-size: 12px;
  padding: 6px 10px;
  width: auto;
  flex: none;
}

.btn-approve { background: var(--success); }
.btn-approve:hover { background: #34ce57; }

.btn-toggle { background: var(--warning); color: var(--dark); }
.btn-toggle:hover { background: #e0a800; }

.btn-password { background: #6f42c1; }
.btn-password:hover { background: #7952b3; }

.btn-delete { background: var(--danger); }
.btn-delete:hover { background: #e74c3c; }

/* الإحصائيات */
.stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 15px;
  margin-bottom: 25px;
}

.stat-card {
  background: var(--darker);
  padding: 20px;
  border-radius: 12px;
  border: 2px solid var(--primary);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(212, 175, 55, 0.2);
}

.stat-card h3 {
  margin: 0;
  font-size: 2.2rem;
  color: var(--primary);
}

.stat-card p {
  margin: 8px 0 0 0;
  font-size: 14px;
  color: var(--text);
  font-weight: bold;
}

/* البحث */
.search-box {
  margin: 20px 0;
  position: relative;
}

.search-box input {
  padding-right: 45px;
}

.search-box i {
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-light);
}

/* الأيقونات */
.icon-select {
  width: 100%;
  padding: 12px;
  margin: 10px 0;
  border-radius: 8px;
  background: var(--darker);
  color: var(--text);
  border: 2px solid #444;
}

/* التنبيهات */
.alert {
  padding: 12px 15px;
  border-radius: 8px;
  margin: 15px 0;
  font-weight: bold;
  text-align: center;
}

.alert-success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
.alert-warning { background: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
.alert-danger { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }

/* التبويبات */
.tabs {
  display: flex;
  margin-bottom: 20px;
  border-bottom: 2px solid #444;
}

.tab {
  padding: 12px 20px;
  background: var(--darker);
  border: none;
  border-bottom: 3px solid transparent;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: bold;
  color: var(--text-light);
  border-radius: 8px 8px 0 0;
  margin: 0 5px;
}

.tab.active {
  color: var(--primary);
  border-bottom: 3px solid var(--primary);
  background: rgba(212, 175, 55, 0.1);
}

.tab-content {
  display: none;
}

.tab-content.active {
  display: block;
  animation: fadeIn 0.5s ease;
}

/* تحسينات للهواتف */
@media (max-width: 768px) {
  .container {
    margin: 10px;
    padding: 15px;
  }
  
  .links-grid {
    grid-template-columns: 1fr;
  }
  
  .user-item {
    flex-direction: column;
    align-items: stretch;
  }
  
  .user-info {
    margin-bottom: 15px;
  }
  
  .user-actions {
    justify-content: center;
  }
  
  .stats {
    grid-template-columns: 1fr;
  }
  
  .tabs {
    flex-wrap: wrap;
  }
  
  .tab {
    flex: 1;
    min-width: 120px;
    margin: 2px;
  }
}

/* شريط التقدم */
.progress-bar {
  height: 4px;
  background: #444;
  border-radius: 2px;
  margin: 10px 0;
  overflow: hidden;
}

.progress {
  height: 100%;
  background: var(--primary);
  border-radius: 2px;
  transition: width 0.3s ease;
}

/* نمط الحقول المطلوبة */
.required::after {
  content: " *";
  color: var(--danger);
}

/* تحميل */
.loading {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255,255,255,.3);
  border-radius: 50%;
  border-top-color: var(--primary);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}
</style>
</head>
<body>

<div id="login" class="container fade-in">
  <h2><i class="fa fa-sign-in-alt"></i> تسجيل الدخول</h2>
  <div id="loginAlert"></div>
  <input type="text" id="loginName" placeholder="اسم المستخدم" class="required">
  <input type="password" id="loginPass" placeholder="كلمة المرور" class="required">
  <select id="loginRole">
    <option value="user">عميل</option>
    <option value="manager">الادارة</option>
  </select>
  <button id="loginBtn"><i class="fa fa-key"></i> دخول</button>
  <p>ليس لديك حساب؟ <a href="#" id="showRegLink">إنشاء حساب</a></p>
</div>

<div id="register" class="container hidden fade-in">
  <h2><i class="fa fa-user-plus"></i> إنشاء حساب</h2>
  <div id="regAlert"></div>
  <input type="text" id="regName" placeholder="اسم المستخدم" class="required">
  <input type="password" id="regPass" placeholder="كلمة المرور" class="required">
  <select id="regRole">
    <option value="user">عميل</option>
    <option value="manager">الادارة</option>
  </select>
  <input type="file" id="regImage" accept="image/*">
  <div class="progress-bar">
    <div class="progress" id="regProgress" style="width: 0%"></div>
  </div>
  <button id="regBtn"><i class="fa fa-save"></i> تسجيل</button>
  <p>لديك حساب؟ <a href="#" id="showLoginLink">تسجيل الدخول</a></p>
</div>

<div id="adminPanel" class="container hidden fade-in">
  <h2><i class="fa fa-cogs"></i> لوحة الإدارة</h2>
  
  <div class="stats">
    <div class="stat-card"><h3 id="totalUsers">0</h3><p>إجمالي المستخدمين</p></div>
    <div class="stat-card"><h3 id="activeUsers">0</h3><p>المستخدمين النشطين</p></div>
    <div class="stat-card"><h3 id="totalLinks">0</h3><p>إجمالي الروابط</p></div>
    <div class="stat-card"><h3 id="pendingUsers">0</h3><p>في انتظار التفعيل</p></div>
  </div>

  <div class="tabs">
    <button class="tab active" data-tab="linksTab"><i class="fa fa-link"></i> إدارة الروابط</button>
    <button class="tab" data-tab="usersTab"><i class="fa fa-users"></i> إدارة المستخدمين</button>
    <button class="tab" data-tab="addLinkTab"><i class="fa fa-plus"></i> إضافة رابط</button>
  </div>

  <div id="linksTab" class="tab-content active">
    <h3><i class="fa fa-link"></i> الروابط المضافة</h3>
    <div class="search-box">
      <input type="text" id="searchLink" placeholder="ابحث في الروابط...">
      <i class="fa fa-search"></i>
    </div>
    <div id="adminLinks" class="links-grid"></div>
  </div>

  <div id="usersTab" class="tab-content">
    <h3><i class="fa fa-users"></i> إدارة الحسابات</h3>
    <div class="search-box">
      <input type="text" id="searchUser" placeholder="ابحث عن مستخدم...">
      <i class="fa fa-search"></i>
    </div>
    <div id="userList" class="user-list"></div>
  </div>

  <div id="addLinkTab" class="tab-content">
    <h3><i class="fa fa-plus-circle"></i> إضافة رابط جديد</h3>
    <input type="text" id="linkName" placeholder="اسم الشركة" class="required">
    <input type="url" id="linkUrl" placeholder="رابط الموقع (يبدأ بـ http:// أو https://)" class="required">
    <textarea id="linkDescription" placeholder="وصف الشركة (اختياري)" rows="3"></textarea>
    <input type="file" id="linkImage" accept="image/*" class="required">
    <select id="linkIcon" class="icon-select">
      <option value="fa-bus">🚌 باص</option>
      <option value="fa-building">🏢 مكتب</option>
      <option value="fa-concierge-bell">🔔 خدمة</option>
      <option value="fa-globe">🌐 عام</option>
      <option value="fa-store">🏪 متجر</option>
      <option value="fa-industry">🏭 مصنع</option>
      <option value="fa-gem">💎 مجوهرات</option>
      <option value="fa-utensils">🍴 مطعم</option>
    </select>
    <div class="progress-bar">
      <div class="progress" id="linkProgress" style="width: 0%"></div>
    </div>
    <button id="addLinkBtn"><i class="fa fa-plus"></i> إضافة رابط</button>
  </div>

  <button class="logout" id="logoutBtn"><i class="fa fa-sign-out-alt"></i> تسجيل خروج</button>
</div>

<div id="userPanel" class="container hidden fade-in">
  <h2><i class="fa fa-building"></i> روابط الشركات</h2>
  <div class="search-box">
    <input type="text" id="userSearchLink" placeholder="ابحث في الروابط...">
    <i class="fa fa-search"></i>
  </div>
  <div id="userLinks" class="links-grid"></div>
  <button class="logout" id="logoutUserBtn"><i class="fa fa-sign-out-alt"></i> تسجيل خروج</button>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  // إنشاء حساب افتراضي superadmin
  initializeDefaultAdmin();
  
  // تهيئة الأحداث
  initializeEvents();
  
  // التحقق من الجلسة النشطة
  checkActiveSession();
});

function initializeDefaultAdmin() {
  if (!localStorage.getItem("users")) {
    let defaultUsers = [{
      id: generateId(),
      name: "admin",
      pass: simpleHash("1234"),
      role: "superadmin",
      approved: true,
      active: true,
      created: new Date().toLocaleString('ar-SA'),
      lastLogin: Date.now(),
      img: "",
      email: "admin@system.com"
    }];
    localStorage.setItem("users", JSON.stringify(defaultUsers));
  }
  
  if (!localStorage.getItem("links")) {
    localStorage.setItem("links", JSON.stringify([]));
  }
}

function initializeEvents() {
  // أحداث التسجيل والدخول
  document.getElementById("regBtn").addEventListener("click", register);
  document.getElementById("loginBtn").addEventListener("click", login);
  
  // أحداث التنقل
  document.getElementById("showRegLink").addEventListener("click", (e) => {
    e.preventDefault();
    showRegister();
  });
  
  document.getElementById("showLoginLink").addEventListener("click", (e) => {
    e.preventDefault();
    showLogin();
  });
  
  // أحداث اللوحة
  document.getElementById("addLinkBtn").addEventListener("click", addLink);
  document.getElementById("logoutBtn").addEventListener("click", logout);
  document.getElementById("logoutUserBtn").addEventListener("click", logout);
  
  // أحداث البحث
  document.getElementById("searchUser").addEventListener("input", loadUsers);
  document.getElementById("searchLink").addEventListener("input", loadLinks);
  document.getElementById("userSearchLink").addEventListener("input", loadLinks);
  
  // أحداث التبويبات
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
      // إزالة النشط من جميع التبويبات
      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
      document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
      
      // تفعيل التبويب المحدد
      this.classList.add('active');
      document.getElementById(this.dataset.tab).classList.add('active');
    });
  });
  
  // تحميل الصور مع شريط التقدم
  document.getElementById("regImage").addEventListener("change", handleImageUpload);
  document.getElementById("linkImage").addEventListener("change", handleImageUpload);
}

// وظائف المساعدة
function generateId() {
  return Date.now().toString(36) + Math.random().toString(36).substr(2);
}

function simpleHash(str) {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = ((hash << 5) - hash) + str.charCodeAt(i);
    hash |= 0;
  }
  return hash.toString();
}

function showAlert(elementId, message, type) {
  const alertDiv = document.getElementById(elementId);
  alertDiv.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
  setTimeout(() => {
    alertDiv.innerHTML = '';
  }, 5000);
}

function validateImage(file) {
  const maxSize = 2 * 1024 * 1024; // 2MB
  const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
  
  if (!allowedTypes.includes(file.type)) {
    return { valid: false, message: 'الرجاء اختيار صورة بصيغة JPEG, PNG, GIF أو WebP' };
  }
  
  if (file.size > maxSize) {
    return { valid: false, message: 'حجم الصورة يجب أن يكون أقل من 2MB' };
  }
  
  return { valid: true };
}

function isValidUrl(string) {
  try {
    new URL(string);
    return true;
  } catch (_) {
    return false;
  }
}

function handleImageUpload(e) {
  const file = e.target.files[0];
  if (!file) return;
  
  const progressBar = e.target.id === 'regImage' ? 
    document.getElementById('regProgress') : 
    document.getElementById('linkProgress');
  
  // محاكاة شريط التقدم
  let width = 0;
  const interval = setInterval(() => {
    if (width >= 100) {
      clearInterval(interval);
    } else {
      width += 10;
      progressBar.style.width = width + '%';
    }
  }, 100);
}

// وظائف التسجيل والدخول
function showRegister() {
  document.getElementById("login").classList.add("hidden");
  document.getElementById("register").classList.remove("hidden");
}

function showLogin() {
  document.getElementById("register").classList.add("hidden");
  document.getElementById("login").classList.remove("hidden");
}

function register() {
  const name = document.getElementById("regName").value.trim();
  const pass = document.getElementById("regPass").value.trim();
  const role = document.getElementById("regRole").value;
  const file = document.getElementById("regImage").files[0];
  
  if (!name || !pass) {
    showAlert("regAlert", "الرجاء ملء جميع الحقول المطلوبة", "warning");
    return;
  }
  
  if (pass.length < 4) {
    showAlert("regAlert", "كلمة المرور يجب أن تكون 4 أحرف على الأقل", "warning");
    return;
  }
  
  let users = JSON.parse(localStorage.getItem("users")) || [];
  
  if (users.find(u => u.name === name)) {
    showAlert("regAlert", "اسم المستخدم موجود مسبقاً", "danger");
    return;
  }
  
  const validation = file ? validateImage(file) : { valid: true };
  if (!validation.valid) {
    showAlert("regAlert", validation.message, "danger");
    return;
  }
  
  const processRegistration = (imgData = "") => {
    users.push({
      id: generateId(),
      name,
      pass: simpleHash(pass),
      role,
      approved: role !== "user",
      active: true,
      created: new Date().toLocaleString('ar-SA'),
      lastLogin: 0,
      img: imgData,
      email: ""
    });
    
    localStorage.setItem("users", JSON.stringify(users));
    showAlert("regAlert", "تم إنشاء الحساب بنجاح", "success");
    setTimeout(showLogin, 2000);
  };
  
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      processRegistration(e.target.result);
    };
    reader.readAsDataURL(file);
  } else {
    processRegistration();
  }
}

function login() {
  const name = document.getElementById("loginName").value.trim();
  const pass = document.getElementById("loginPass").value.trim();
  const role = document.getElementById("loginRole").value;
  
  if (!name || !pass) {
    showAlert("loginAlert", "الرجاء إدخال اسم المستخدم وكلمة المرور", "warning");
    return;
  }
  
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const user = users.find(u => u.name === name && u.pass === simpleHash(pass) && u.role === role);
  
  if (!user) {
    showAlert("loginAlert", "بيانات الدخول غير صحيحة", "danger");
    return;
  }
  
  if (!user.active) {
    showAlert("loginAlert", "الحساب موقوف من قبل الإدارة", "danger");
    return;
  }
  
  if (role === "user" && !user.approved) {
    showAlert("loginAlert", "الحساب بانتظار التفعيل من قبل الإدارة", "warning");
    return;
  }
  
  user.lastLogin = Date.now();
  localStorage.setItem("users", JSON.stringify(users));
  localStorage.setItem("loggedUser", JSON.stringify(user));
  
  showAlert("loginAlert", `مرحباً بك ${name}`, "success");
  
  setTimeout(() => {
    if (["superadmin", "manager", "staff"].includes(role)) {
      showAdminPanel();
    } else {
      showUserPanel();
    }
  }, 1000);
}

// وظائف اللوحات
function showAdminPanel() {
  document.getElementById("login").classList.add("hidden");
  document.getElementById("register").classList.add("hidden");
  document.getElementById("adminPanel").classList.remove("hidden");
  loadLinks();
  loadUsers();
  updateStats();
}

function showUserPanel() {
  document.getElementById("login").classList.add("hidden");
  document.getElementById("register").classList.add("hidden");
  document.getElementById("userPanel").classList.remove("hidden");
  loadLinks();
}

function logout() {
  localStorage.removeItem("loggedUser");
  location.reload();
}

// وظائف الروابط
function addLink() {
  const name = document.getElementById("linkName").value.trim();
  const url = document.getElementById("linkUrl").value.trim();
  const description = document.getElementById("linkDescription").value.trim();
  const file = document.getElementById("linkImage").files[0];
  const icon = document.getElementById("linkIcon").value;
  
  if (!name || !url || !file) {
    alert("الرجاء ملء جميع الحقول المطلوبة");
    return;
  }
  
  if (!isValidUrl(url)) {
    alert("الرجاء إدخال رابط صحيح يبدأ بـ http:// أو https://");
    return;
  }
  
  const validation = validateImage(file);
  if (!validation.valid) {
    alert(validation.message);
    return;
  }
  
  const reader = new FileReader();
  reader.onload = function(e) {
    const links = JSON.parse(localStorage.getItem("links")) || [];
    links.push({
      id: generateId(),
      name,
      url,
      description,
      img: e.target.result,
      icon,
      created: new Date().toLocaleString('ar-SA'),
      createdBy: JSON.parse(localStorage.getItem("loggedUser")).name
    });
    
    localStorage.setItem("links", JSON.stringify(links));
    
    // إعادة تعيين الحقول
    document.getElementById("linkName").value = "";
    document.getElementById("linkUrl").value = "";
    document.getElementById("linkDescription").value = "";
    document.getElementById("linkImage").value = "";
    document.getElementById("linkProgress").style.width = "0%";
    
    loadLinks();
    updateStats();
    alert("تم إضافة الرابط بنجاح");
  };
  reader.readAsDataURL(file);
}

function loadLinks() {
  const links = JSON.parse(localStorage.getItem("links")) || [];
  const adminDiv = document.getElementById("adminLinks");
  const userDiv = document.getElementById("userLinks");
  const searchTerm = document.getElementById("searchLink")?.value.toLowerCase() || "";
  const userSearchTerm = document.getElementById("userSearchLink")?.value.toLowerCase() || "";
  
  // تصفية الروابط حسب البحث
  const filteredLinks = links.filter(link => 
    link.name.toLowerCase().includes(searchTerm) || 
    link.description.toLowerCase().includes(searchTerm)
  );
  
  const userFilteredLinks = links.filter(link => 
    link.name.toLowerCase().includes(userSearchTerm) || 
    link.description.toLowerCase().includes(userSearchTerm)
  );
  
  // عرض الروابط في لوحة الإدارة
  adminDiv.innerHTML = "";
  if (filteredLinks.length === 0) {
    adminDiv.innerHTML = "<p style='text-align:center; color:#bbb; grid-column:1/-1;'>لا توجد روابط</p>";
  } else {
    filteredLinks.forEach((link, i) => {
      adminDiv.innerHTML += `
        <div class='link-card fade-in'>
          <i class="fa ${link.icon}" style="font-size:30px; color:var(--primary);"></i>
          <img src='${link.img}' alt='${link.name}'>
          <h3>${link.name}</h3>
          <p>${link.description || "لا يوجد وصف"}</p>
          <a href='${link.url}' target='_blank'><i class="fa fa-external-link-alt"></i> زيارة الموقع</a>
          <div class="link-actions">
            <button class="edit-link" onclick='editLink("${link.id}")'><i class="fa fa-edit"></i> تعديل</button>
            <button class="delete-link" onclick='deleteLink("${link.id}")'><i class="fa fa-trash"></i> حذف</button>
          </div>
          <div class="status">أضيف بواسطة: ${link.createdBy} | ${link.created}</div>
        </div>`;
    });
  }
  
  // عرض الروابط في لوحة المستخدم
  userDiv.innerHTML = "";
  if (userFilteredLinks.length === 0) {
    userDiv.innerHTML = "<p style='text-align:center; color:#bbb; grid-column:1/-1;'>لا توجد روابط</p>";
  } else {
    userFilteredLinks.forEach(link => {
      userDiv.innerHTML += `
        <div class='link-card fade-in'>
          <i class="fa ${link.icon}" style="font-size:30px; color:var(--primary);"></i>
          <img src='${link.img}' alt='${link.name}'>
          <h3>${link.name}</h3>
          <p>${link.description || "لا يوجد وصف"}</p>
          <a href='${link.url}' target='_blank'><i class="fa fa-external-link-alt"></i> زيارة الموقع</a>
        </div>`;
    });
  }
}

function deleteLink(id) {
  if (!confirm("هل أنت متأكد من حذف هذا الرابط؟")) return;
  
  const links = JSON.parse(localStorage.getItem("links")) || [];
  const updatedLinks = links.filter(link => link.id !== id);
  localStorage.setItem("links", JSON.stringify(updatedLinks));
  
  loadLinks();
  updateStats();
}

function editLink(id) {
  const links = JSON.parse(localStorage.getItem("links")) || [];
  const link = links.find(l => l.id === id);
  if (!link) return;
  
  const newName = prompt("اسم الشركة:", link.name);
  if (!newName) return;
  
  const newUrl = prompt("رابط الموقع:", link.url);
  if (!newUrl || !isValidUrl(newUrl)) {
    alert("الرجاء إدخال رابط صحيح");
    return;
  }
  
  const newDescription = prompt("وصف الشركة:", link.description || "");
  const newIcon = prompt("أيقونة FontAwesome (مثال: fa-bus):", link.icon);
  if (!newIcon) return;
  
  link.name = newName;
  link.url = newUrl;
  link.description = newDescription;
  link.icon = newIcon;
  link.updated = new Date().toLocaleString('ar-SA');
  
  localStorage.setItem("links", JSON.stringify(links));
  loadLinks();
}

// وظائف المستخدمين
function loadUsers() {
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const searchTerm = document.getElementById("searchUser").value.toLowerCase();
  const div = document.getElementById("userList");
  
  const filteredUsers = users.filter(u => 
    u.name.toLowerCase().includes(searchTerm) || 
    u.role.toLowerCase().includes(searchTerm) ||
    u.email.toLowerCase().includes(searchTerm)
  );
  
  div.innerHTML = "";
  
  if (filteredUsers.length === 0) {
    div.innerHTML = "<p style='text-align:center; color:#bbb;'>لا توجد نتائج</p>";
    return;
  }
  
  filteredUsers.forEach(user => {
    const roleClass = `role-${user.role}`;
    
    div.innerHTML += `
      <div class="user-item fade-in">
        <div class="user-info">
          <img src="${user.img || 'https://via.placeholder.com/60/333/fff?text=صورة'}" alt="${user.name}">
          <div class="user-details">
            <strong>${user.name}</strong>
            <span class="user-role ${roleClass}">${getRoleName(user.role)}</span>
            ${user.email ? `<div><small>${user.email}</small></div>` : ''}
            <div class="status">
              إنشاء: ${user.created}<br>
              آخر دخول: ${user.lastLogin ? new Date(user.lastLogin).toLocaleString('ar-SA') : "لم يسجل بعد"}
              ${!user.approved ? '<br><strong style="color:var(--warning);">بانتظار التفعيل</strong>' : ''}
              ${!user.active ? '<br><strong style="color:var(--danger);">موقوف</strong>' : ''}
            </div>
          </div>
        </div>
        <div class="user-actions">
          ${(user.role === "user" && !user.approved) ? 
            `<button class="btn-approve" onclick='approveUser("${user.id}")'><i class="fa fa-check"></i> تفعيل</button>` : ""}
          <button class="btn-toggle" onclick='toggleActive("${user.id}")'>
            <i class="fa ${user.active ? "fa-ban" : "fa-play"}"></i> ${user.active ? "إيقاف" : "تفعيل"}
          </button>
          <button class="btn-password" onclick='changePass("${user.id}")'><i class="fa fa-key"></i> كلمة المرور</button>
          ${user.role !== "superadmin" ? 
            `<button class="btn-delete" onclick='deleteUser("${user.id}")'><i class="fa fa-trash"></i> حذف</button>` : ""}
        </div>
      </div>`;
  });
}

function getRoleName(role) {
  const roles = {
    'user': 'عميل',
    'staff': 'موظف',
    'manager': 'مدير',
    'superadmin': 'مشرف عام'
  };
  return roles[role] || role;
}

function approveUser(id) {
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const user = users.find(u => u.id === id);
  if (user) {
    user.approved = true;
    localStorage.setItem("users", JSON.stringify(users));
    loadUsers();
    updateStats();
  }
}

function toggleActive(id) {
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const user = users.find(u => u.id === id);
  if (user && user.role !== "superadmin") {
    user.active = !user.active;
    localStorage.setItem("users", JSON.stringify(users));
    loadUsers();
    updateStats();
  }
}

function deleteUser(id) {
  if (!confirm("هل أنت متأكد من حذف هذا المستخدم؟")) return;
  
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const updatedUsers = users.filter(u => u.id !== id);
  localStorage.setItem("users", JSON.stringify(updatedUsers));
  
  loadUsers();
  updateStats();
}

function changePass(id) {
  const newPass = prompt("أدخل كلمة مرور جديدة (4 أحرف على الأقل):");
  if (!newPass || newPass.length < 4) {
    alert("كلمة المرور يجب أن تكون 4 أحرف على الأقل");
    return;
  }
  
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const user = users.find(u => u.id === id);
  if (user) {
    user.pass = simpleHash(newPass);
    localStorage.setItem("users", JSON.stringify(users));
    alert("تم تغيير كلمة المرور بنجاح");
    loadUsers();
  }
}

// الإحصائيات
function updateStats() {
  const users = JSON.parse(localStorage.getItem("users")) || [];
  const links = JSON.parse(localStorage.getItem("links")) || [];
  
  document.getElementById("totalUsers").innerText = users.length;
  document.getElementById("activeUsers").innerText = users.filter(u => u.active).length;
  document.getElementById("totalLinks").innerText = links.length;
  document.getElementById("pendingUsers").innerText = users.filter(u => u.role === "user" && !u.approved).length;
}

// إدارة الجلسة
function checkActiveSession() {
  const loggedUser = JSON.parse(localStorage.getItem("loggedUser"));
  if (loggedUser) {
    // التحقق من انتهاء الجلسة (30 دقيقة)
    if (Date.now() - loggedUser.lastLogin > 30 * 60 * 1000) {
      localStorage.removeItem("loggedUser");
      return;
    }
    
    if (["superadmin", "manager", "staff"].includes(loggedUser.role)) {
      showAdminPanel();
    } else {
      showUserPanel();
    }
  }
}

// مراقبة انتهاء الجلسة
setInterval(() => {
  const loggedUser = JSON.parse(localStorage.getItem("loggedUser"));
  if (loggedUser && Date.now() - loggedUser.lastLogin > 30 * 60 * 1000) {
    alert("انتهت الجلسة، الرجاء تسجيل الدخول مجدداً");
    logout();
  }
}, 60000); // التحقق كل دقيقة
</script>
</body>
</html>
